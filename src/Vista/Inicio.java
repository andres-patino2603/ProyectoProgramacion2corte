/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import Controlador.Conexion;
import static Controlador.Conexion.con;
import Controlador.Funciones;
import Modelo.Cuentas;
import Modelo.producto;
import static Vista.Inicio.obtenerIdPedido;

import java.sql.PreparedStatement;
import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Falabella
 */
public class Inicio extends javax.swing.JFrame {

    public JTextField getJtIde() {
        return JtIde;
    }

    public void setJtIde(JTextField JtIde) {
        this.JtIde = JtIde;
    }

    public DefaultTableModel modelo;

    Conexion mConexion;
    ArrayList mListaProductos, mListaCuentas;

    /**
     * Creates new form Inicio
     *
     * @throws java.lang.ClassNotFoundException
     * @throws java.lang.InstantiationException
     * @throws java.lang.IllegalAccessException
     * @throws java.sql.SQLException
     */
    
    DefaultComboBoxModel ModelCombo = new DefaultComboBoxModel();
    public Inicio() throws ClassNotFoundException, InstantiationException, IllegalAccessException, SQLException {
        initComponents();
        Conexion.abrirConexion();

        jTabbedPane.setEnabledAt(1, false);
        jTabbedPane.setEnabledAt(2, false);
        jTabbedPane.setEnabledAt(3, false);
        jTabbedPane.setEnabledAt(4, false);

        JbAñadirSal.setEnabled(false);

        modelo = new DefaultTableModel();
        modelo.addColumn("Producto");
        modelo.addColumn("Cantidad");
        modelo.addColumn("Precio");
        this.JTableProductos.setModel(modelo);
        this.JComboPed.setModel(ModelCombo);
        JPRegg.setVisible(false);
        try {
            mListaCuentas = new ArrayList();
            mListaProductos = new ArrayList();
            llenarCBProd();
    

        } catch (InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
  
public void ComboPedidos() {


        Statement consulta;
        ResultSet resultado;
        
        ModelCombo.removeAllElements();
        try {
            consulta = con.createStatement();
            resultado = consulta.executeQuery("SELECT idpedido FROM pedido2 WHERE idcliente = " + JtIde.getText());

            while (resultado.next()) {
              int idPedido = resultado.getInt("idPedido");
              ModelCombo.addElement(idPedido);
            }
        } catch (SQLException e) {
        }
    }

 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane4 = new javax.swing.JLayeredPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jSpinner2 = new javax.swing.JSpinner();
        jTextField6 = new javax.swing.JTextField();
        jTabbedPane = new javax.swing.JTabbedPane();
        JPReg = new javax.swing.JPanel();
        JPLog = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        JtIde = new javax.swing.JTextField();
        BtIngresar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        JpContra = new javax.swing.JPasswordField();
        JBLogReg = new javax.swing.JToggleButton();
        JPRegg = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        JtIdentificacion = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        JtTelefono = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        JtNombre = new javax.swing.JTextField();
        JtEmail = new javax.swing.JTextField();
        BtRegistrar = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        JtDireccion = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        JpContra1 = new javax.swing.JPasswordField();
        jLabel28 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        JtIden = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        BtConsultar = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        JtSaldoDis = new javax.swing.JLabel();
        CbCuenta = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        JtNoCuenta2 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        JtCup = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        JtSaldoDis2 = new javax.swing.JLabel();
        JbAñadirSal = new javax.swing.JButton();
        JtAñadir = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        JtNoCuenta3 = new javax.swing.JTextField();
        JtNoTar = new javax.swing.JTextField();
        JtCupo = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        JtContra3 = new javax.swing.JTextField();
        JpPedido = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        CbProd = new javax.swing.JComboBox<>();
        BtAgregar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jPanel1 = new javax.swing.JPanel();
        JtPagar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        JTableProductos = new javax.swing.JTable();
        JbBorrarProd = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        JComboPed = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        JlPruebas = new javax.swing.JLabel();
        BtConsultarPedido = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        JTAProdPed = new javax.swing.JTextArea();
        JPdes = new javax.swing.JPanel();
        JbLogOut = new javax.swing.JButton();

        javax.swing.GroupLayout jLayeredPane4Layout = new javax.swing.GroupLayout(jLayeredPane4);
        jLayeredPane4.setLayout(jLayeredPane4Layout);
        jLayeredPane4Layout.setHorizontalGroup(
            jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jLayeredPane4Layout.setVerticalGroup(
            jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTextField6.setText("jTextField6");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("APPPARAPEDIDOS"); // NOI18N

        jTabbedPane.setBackground(new java.awt.Color(204, 204, 255));
        jTabbedPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTabbedPane.setToolTipText("");
        jTabbedPane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        JPLog.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        JPLog.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel9.setText("Identificacion");

        JtIde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JtIdeActionPerformed(evt);
            }
        });
        JtIde.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                JtIdeKeyTyped(evt);
            }
        });

        BtIngresar.setText("Ingresar");
        BtIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtIngresarActionPerformed(evt);
            }
        });

        jLabel7.setText("Contraseña");

        JpContra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JpContraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout JPLogLayout = new javax.swing.GroupLayout(JPLog);
        JPLog.setLayout(JPLogLayout);
        JPLogLayout.setHorizontalGroup(
            JPLogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPLogLayout.createSequentialGroup()
                .addContainerGap(153, Short.MAX_VALUE)
                .addComponent(BtIngresar)
                .addGap(99, 99, 99))
            .addGroup(JPLogLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(JPLogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(JPLogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(JtIde, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(JpContra))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        JPLogLayout.setVerticalGroup(
            JPLogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPLogLayout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(JPLogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(JtIde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(JPLogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(JpContra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BtIngresar)
                .addGap(250, 250, 250))
        );

        JBLogReg.setText("Registrar/Ingresar");
        JBLogReg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBLogRegActionPerformed(evt);
            }
        });

        JPRegg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setText("Nombre");

        jLabel4.setText("Telefono");

        JtIdentificacion.setToolTipText("");
        JtIdentificacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                JtIdentificacionKeyTyped(evt);
            }
        });

        jLabel1.setText("Email");

        JtTelefono.setForeground(new java.awt.Color(255, 102, 153));
        JtTelefono.setToolTipText("");
        JtTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                JtTelefonoKeyTyped(evt);
            }
        });

        jLabel2.setText("Identificacion");

        JtNombre.setForeground(new java.awt.Color(255, 102, 153));
        JtNombre.setToolTipText("");
        JtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                JtNombreKeyTyped(evt);
            }
        });

        JtEmail.setForeground(new java.awt.Color(255, 102, 153));
        JtEmail.setToolTipText("");
        JtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JtEmailActionPerformed(evt);
            }
        });

        BtRegistrar.setText("Registrar");
        BtRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtRegistrarActionPerformed(evt);
            }
        });

        jLabel10.setText("Direccion");

        JtDireccion.setForeground(new java.awt.Color(255, 102, 153));
        JtDireccion.setToolTipText("");
        JtDireccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JtDireccionActionPerformed(evt);
            }
        });

        jLabel8.setText("Contraseña");

        JpContra1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JpContra1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout JPReggLayout = new javax.swing.GroupLayout(JPRegg);
        JPRegg.setLayout(JPReggLayout);
        JPReggLayout.setHorizontalGroup(
            JPReggLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPReggLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(JPReggLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JPReggLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(JPReggLayout.createSequentialGroup()
                        .addGroup(JPReggLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPReggLayout.createSequentialGroup()
                                .addGroup(JPReggLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(JPReggLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(JtIdentificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(JtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(JPReggLayout.createSequentialGroup()
                                .addGroup(JPReggLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel10))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(JPReggLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(BtRegistrar)
                                    .addComponent(JtDireccion, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                                    .addComponent(JtEmail)
                                    .addComponent(JpContra1)
                                    .addComponent(JtTelefono))))
                        .addGap(37, 37, 37))))
        );
        JPReggLayout.setVerticalGroup(
            JPReggLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPReggLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(JPReggLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(JtIdentificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(JPReggLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(JPReggLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(JtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(JPReggLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(JtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(JPReggLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(JtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(JPReggLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(JpContra1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BtRegistrar)
                .addGap(15, 15, 15))
        );

        jLabel28.setText("<html><br>Credenciales admin</br>\n <br>Id: 11</br>\n---------- Contra: admin\n </html>");
        jLabel28.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout JPRegLayout = new javax.swing.GroupLayout(JPReg);
        JPReg.setLayout(JPRegLayout);
        JPRegLayout.setHorizontalGroup(
            JPRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPRegLayout.createSequentialGroup()
                .addGroup(JPRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JPRegLayout.createSequentialGroup()
                        .addGap(236, 236, 236)
                        .addComponent(JBLogReg, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(JPRegLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(JPRegg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(91, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPRegLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(JPLog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        JPRegLayout.setVerticalGroup(
            JPRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPRegLayout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(JPRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JPRegg, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JPLog, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(JPRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JBLogReg)
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("Login", JPReg);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel14.setText("Saldo disponible:");

        JtIden.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel16.setText("No Cuenta:");

        BtConsultar.setText("Consultar");
        BtConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtConsultarActionPerformed(evt);
            }
        });

        jLabel20.setText("Identificacion:");

        JtSaldoDis.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        CbCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbCuentaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(18, 18, 18)
                        .addComponent(JtSaldoDis, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addComponent(jLabel16))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JtIden, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CbCuenta, 0, 134, Short.MAX_VALUE))))
                .addGap(16, 16, 16))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BtConsultar)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel20)
                    .addComponent(JtIden, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(CbCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(JtSaldoDis, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BtConsultar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel12.setText("No Cuenta:");

        JtNoCuenta2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel11.setText("Cupo:");

        JtCup.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel18.setText("Saldo Disponible:");

        JtSaldoDis2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        JbAñadirSal.setText("Añadir Saldo");
        JbAñadirSal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JbAñadirSalActionPerformed(evt);
            }
        });

        JtAñadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JtAñadirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel12)
                                .addComponent(jLabel11))
                            .addGap(43, 43, 43)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(JtNoCuenta2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(JtCup, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addComponent(jLabel18)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(JtSaldoDis2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(JbAñadirSal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JtAñadir, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12)
                    .addComponent(JtNoCuenta2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(JtCup, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(JtSaldoDis2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(JbAñadirSal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JtAñadir))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel21.setText("Consultar:");

        jLabel22.setText("Agregar Saldo");

        jLabel23.setText("Agregar Cuenta:");

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel24.setText("No. Cuenta");

        jLabel25.setText("No. Tarjeta");

        jLabel26.setText("Cupo:");

        JtNoCuenta3.setPreferredSize(new java.awt.Dimension(67, 22));
        JtNoCuenta3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JtNoCuenta3ActionPerformed(evt);
            }
        });

        jButton1.setText("Agregar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel27.setText("Contraseña");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JtContra3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addComponent(jLabel24)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(JtNoCuenta3, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE))
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel25)
                                .addComponent(jLabel26))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(JtNoTar, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                                .addComponent(JtCupo)))))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(34, 34, 34))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(JtNoCuenta3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(JtNoTar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(JtCupo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(JtContra3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22))
                        .addGap(44, 44, 44))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23)
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(jLabel22))
                .addGap(9, 9, 9)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane.addTab("Cuenta", jPanel4);

        JpPedido.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel5.setText("Producto:");

        CbProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbProdActionPerformed(evt);
            }
        });

        BtAgregar.setText("Agregar");
        BtAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtAgregarActionPerformed(evt);
            }
        });

        jLabel6.setText("Cantidad:");

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        JtPagar.setText("Ir a pagar");
        JtPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JtPagarActionPerformed(evt);
            }
        });

        JTableProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Producto", "Cantidad", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JTableProductos.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(JTableProductos);
        if (JTableProductos.getColumnModel().getColumnCount() > 0) {
            JTableProductos.getColumnModel().getColumn(0).setResizable(false);
            JTableProductos.getColumnModel().getColumn(1).setResizable(false);
            JTableProductos.getColumnModel().getColumn(2).setResizable(false);
        }

        JbBorrarProd.setText("Borrar");
        JbBorrarProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JbBorrarProdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 494, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(JbBorrarProd)
                .addGap(18, 18, 18)
                .addComponent(JtPagar)
                .addGap(167, 167, 167))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JtPagar)
                    .addComponent(JbBorrarProd))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout JpPedidoLayout = new javax.swing.GroupLayout(JpPedido);
        JpPedido.setLayout(JpPedidoLayout);
        JpPedidoLayout.setHorizontalGroup(
            JpPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JpPedidoLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(JpPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(JpPedidoLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CbProd, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BtAgregar))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(77, Short.MAX_VALUE))
        );
        JpPedidoLayout.setVerticalGroup(
            JpPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JpPedidoLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(JpPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(JpPedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(CbProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(BtAgregar)
                        .addComponent(jLabel6)
                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("Pedido", JpPedido);

        jLabel13.setText("IdPedido:");

        JComboPed.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Default--" }));
        JComboPed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JComboPedActionPerformed(evt);
            }
        });

        jLabel15.setText("Productos:");

        jLabel19.setText("Estado:");

        JlPruebas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        JlPruebas.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        BtConsultarPedido.setText("Consultar");
        BtConsultarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtConsultarPedidoActionPerformed(evt);
            }
        });

        JTAProdPed.setColumns(20);
        JTAProdPed.setRows(5);
        JTAProdPed.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        JTAProdPed.setEnabled(false);
        jScrollPane2.setViewportView(JTAProdPed);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JComboPed, 0, 129, Short.MAX_VALUE)
                .addGap(115, 115, 115)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JlPruebas, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                .addGap(148, 148, 148))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(274, 274, 274)
                        .addComponent(BtConsultarPedido))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13)
                        .addComponent(JComboPed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(JlPruebas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel19)))
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(BtConsultarPedido)
                        .addGap(43, 43, 43))))
        );

        jTabbedPane.addTab("Estado Pedidos", jPanel3);

        JPdes.setEnabled(false);

        JbLogOut.setText("LogOut");
        JbLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JbLogOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout JPdesLayout = new javax.swing.GroupLayout(JPdes);
        JPdes.setLayout(JPdesLayout);
        JPdesLayout.setHorizontalGroup(
            JPdesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPdesLayout.createSequentialGroup()
                .addGap(238, 238, 238)
                .addComponent(JbLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(263, Short.MAX_VALUE))
        );
        JPdesLayout.setVerticalGroup(
            JPdesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPdesLayout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addComponent(JbLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(165, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("Desconectarse", JPdes);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public JLabel getJtSaldoDis() {
        return JtSaldoDis;
    }

    public void setJtSaldoDis(JLabel JtSaldoDis) {
        this.JtSaldoDis = JtSaldoDis;
    }

    public JLabel getJtSaldoDis2() {
        return JtSaldoDis2;
    }

    public void setJtSaldoDis2(JLabel JtSaldoDis2) {
        this.JtSaldoDis2 = JtSaldoDis2;
    }
    public static int maximo = 20;
    public int getMaximo(){
        return maximo;
    }
    public void setMaximo(int maximo){
        Inicio.maximo = maximo;
    }
   public static int otrocont = 0;

    public static int getOtrocont() {
        return otrocont;
    }

    public static void setOtrocont(int otrocont) {
        Inicio.otrocont = otrocont;
    }
    private void BtAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtAgregarActionPerformed
    Pagar pagar = new Pagar();
        System.out.println("Otro cont:" + otrocont);
        String selectedItem = CbProd.getSelectedItem().toString();
    String[] prod = selectedItem.split(",");
    String cant = String.valueOf(jSpinner1.getValue());
    int value = (Integer) jSpinner1.getValue();
    String[] partes = selectedItem.split("-");

    // Obtener la última parte

    int ultimaParte = Integer.parseInt(partes[partes.length - 1].trim());
    ultimaParte = ultimaParte;
    System.out.println(ultimaParte);
    String[] productos = new String[3];
    productos[0] = prod[0];
    productos[1] = cant;
    productos[2] = String.valueOf(ultimaParte);
    String[] pr = selectedItem.split("-");
    String precio = pr[pr.length - 1];
    System.out.println(precio);

    if (otrocont + value > maximo) {
        JOptionPane.showMessageDialog(null, "No se puede agregar el producto. La cantidad total supera los 20 productos.");
    } else {
        modelo.addRow(productos);
        contador++;
        otrocont += value;
        System.out.println(contador);

        if (otrocont >= maximo) {
            BtAgregar.setEnabled(false);
        }
    }
    }//GEN-LAST:event_BtAgregarActionPerformed

    public JButton getBtAgregar() {
        return BtAgregar;
    }

    private void JBLogRegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBLogRegActionPerformed
        JPRegg.setVisible(!JBLogReg.isSelected());
        JPRegg.setVisible(JBLogReg.isSelected());
        JPLog.setVisible(JBLogReg.isSelected());
        JPLog.setVisible(!JBLogReg.isSelected());
    }//GEN-LAST:event_JBLogRegActionPerformed

    private void JtDireccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JtDireccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JtDireccionActionPerformed

    private void BtRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtRegistrarActionPerformed
        int Identificacion = Integer.parseInt(JtIdentificacion.getText());
        String Nombre = JtNombre.getText();
        String Direccion = JtDireccion.getText();
        String Telefono = JtTelefono.getText();
        String Email = JtEmail.getText();
        String contra = String.valueOf(JpContra1.getPassword()).trim();
        try {
            Conexion.registrar(Identificacion, Nombre, Direccion, Telefono, Email, contra);
        } catch (SQLException ex) {
            Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Ya existe una cuenta con esta identificacion");
        }
    }//GEN-LAST:event_BtRegistrarActionPerformed

    private void JtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JtEmailActionPerformed

    private void JtIdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JtIdeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JtIdeActionPerformed

    private void JtAñadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JtAñadirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JtAñadirActionPerformed
    public static String registros;
   public static int obtenerIdCom() {
    int idCom = 0;
    try {
        // Crear la sentencia SQL para obtener el último idDetal
        String sql = "SELECT IdDetal FROM detalles ORDER BY IdDetal DESC LIMIT 1";
        Conexion.abrirConexion();
        // Crear el objeto Statement
        try (Statement statement = con.createStatement()) {
            // Ejecutar la consulta SQL y obtener el resultado
            ResultSet resultSet = statement.executeQuery(sql);

            // Verificar si hay algún resultado
            if (resultSet.next()) {
                // Obtener el valor del campo idDetal del primer (y único) registro
                idCom = resultSet.getInt("idDetal");
                System.out.println("Último idDetal: " + idCom);
                idCom++; // Incrementar el valor del idDetal en uno
            } else {
                System.out.println("No se encontraron registros en la tabla detalles");
            }
        }
    } catch (SQLException e) {
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
        Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
    }
    return idCom;
}
   public static int obtenerIdDetalle() {
    int idDetal = 0;
    try {
        // Crear la sentencia SQL para obtener el último idDetal
        String sql = "SELECT IdDetal FROM detalles ORDER BY IdDetal DESC LIMIT 1";
        Conexion.abrirConexion();
        // Crear el objeto Statement
        try (Statement statement = con.createStatement()) {
            // Ejecutar la consulta SQL y obtener el resultado
            ResultSet resultSet = statement.executeQuery(sql);

            // Verificar si hay algún resultado
            if (resultSet.next()) {
                // Obtener el valor del campo idDetal del primer (y único) registro
                idDetal = resultSet.getInt("IdDetal");
                System.out.println("Último idDetal: " + idDetal);
                idDetal++; // Incrementar el valor de idDetal en uno
            } else {
                System.out.println("No se encontraron registros en la tabla detalles");
            }
        }
    } catch (SQLException e) {
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
        Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
    }
    return idDetal;
}
  public static int obtenerIdPedido() {
    int idPedido = 0;
    try {
        // Crear la sentencia SQL para obtener el último idPedido
        String sql = "SELECT IdPedido FROM pedido2 ORDER BY IdPedido DESC LIMIT 1";
        Conexion.abrirConexion();
        // Crear el objeto Statement
        try (Statement statement = con.createStatement()) {
            // Ejecutar la consulta SQL y obtener el resultado
            ResultSet resultSet = statement.executeQuery(sql);

            // Verificar si hay algún resultado
            if (resultSet.next()) {
                // Obtener el valor del campo idPedido del primer (y único) registro
                idPedido = resultSet.getInt("IdPedido");
                System.out.println("Último idPedido: " + idPedido);
            } else {
                System.out.println("No se encontraron registros en la tabla pedido");
            }
        }
    } catch (SQLException e) {
    }   catch (ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
        }
    return idPedido;
}
    public static int idped=obtenerIdPedido();

    public int getidped(){
    return idped;
    }
     public void setIdPedido(int idPedido) {
        this.idped = idPedido;
    }
    ArrayList pedido = new ArrayList();
    private void JtPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JtPagarActionPerformed

        Pagar pag = new Pagar();
int totalPrecios = 0;
         Map<String, int[]> sumasProductos = new HashMap<>();


for (int i = 0; i < modelo.getRowCount(); i++) {
    String nombreCompleto = modelo.getValueAt(i, 0).toString();
    String[] partes = nombreCompleto.split("-");

    // Obtener el nombre del producto
    String nombreProducto =partes[0]+"-" +partes[1].trim();

    int cantidad = Integer.parseInt(modelo.getValueAt(i, 1).toString());
    double precio = Double.parseDouble(modelo.getValueAt(i, 2).toString());

    if (sumasProductos.containsKey(nombreProducto)) {
        int[] sumas = sumasProductos.get(nombreProducto);
        int sumaCantidad = sumas[0];
        double sumaPrecio = sumas[1];

        sumaCantidad += cantidad;
        sumaPrecio += cantidad * precio;

        sumas[0] = sumaCantidad;
        sumas[1] = (int) (sumaPrecio);
    } else {
        int[] sumas = new int[2];
        sumas[0] = cantidad;
        sumas[1] = (int) (cantidad * precio);
        sumasProductos.put(nombreProducto, sumas);
    }
    
    // Actualizar el total de precios
    totalPrecios += (int) (cantidad * precio);
}

StringBuilder cadenaRegistros = new StringBuilder();

for (Map.Entry<String, int[]> entry : sumasProductos.entrySet()) {
    String nombreProducto = entry.getKey();
    int[] sumas = entry.getValue();
    int sumaCantidad = sumas[0];
    int sumaPrecio = sumas[1];

    cadenaRegistros.append("Prod: ").append(nombreProducto)
                   .append(", Cantidad: ").append(sumaCantidad)
                   .append(", Valor ").append(sumaPrecio).append("\n");
}

registros = cadenaRegistros.toString();
System.out.println(registros);
pedido.add("id: "+idped+"----"+registros);
        pag.setVisible(true);
        pag.Jped.setText("<html>" + registros.replace("\n", "<br>") + "</html>");
        pag.JLTotal.setText(String.valueOf(totalPrecios));
        System.out.println(idped);
        
 
    }//GEN-LAST:event_JtPagarActionPerformed

    private void CbProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbProdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CbProdActionPerformed

    private void JtIdentificacionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JtIdentificacionKeyTyped
        int key = evt.getKeyChar();
        boolean numeros = key >= 48 && key <= 57;
        if (!numeros) {
            evt.consume();
        }

        if (JtIdentificacion.getText().trim().length() == 15) {
            evt.consume();
        }
    }//GEN-LAST:event_JtIdentificacionKeyTyped

    private void JtTelefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JtTelefonoKeyTyped
        int key = evt.getKeyChar();
        boolean numeros = key >= 48 && key <= 57;
        if (!numeros) {
            evt.consume();
        }

        if (JtIdentificacion.getText().trim().length() == 15) {
            evt.consume();
        }
    }//GEN-LAST:event_JtTelefonoKeyTyped

    private void JtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JtNombreKeyTyped
        int key = evt.getKeyChar();

        boolean mayusculas = key >= 65 && key <= 90;
        boolean minusculas = key >= 97 && key <= 122;
        boolean espacio = key == 32;

        if (!(minusculas || mayusculas || espacio)) {
            evt.consume();
        }

    }//GEN-LAST:event_JtNombreKeyTyped

    private void JtIdeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JtIdeKeyTyped
        int key = evt.getKeyChar();
        boolean numeros = key >= 48 && key <= 57;
        if (!numeros) {
            evt.consume();
        }

        if (JtIdentificacion.getText().trim().length() == 15) {
            evt.consume();
        }
    }//GEN-LAST:event_JtIdeKeyTyped

    private void BtConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtConsultarActionPerformed
 try {
        String NoCuenta = (String) CbCuenta.getSelectedItem();
        if (NoCuenta != null) {
            JtNoCuenta2.setText(NoCuenta);
            ConsultarCuenta(NoCuenta);
            JbAñadirSal.setEnabled(true);
        } else {
            JOptionPane.showMessageDialog(null, "Selecciona una cuenta válida.");
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Error al consultar la cuenta.");
    }
    }//GEN-LAST:event_BtConsultarActionPerformed

    public JLabel getJtCup() {
        return JtCup;
    }

    public String ConsultarCuenta(String NoCuenta) throws SQLException {
   try {
        Controlador.Conexion.abrirConexion();
        String Saldo, Cupo, Ide;
        Statement consulta;
        ResultSet resultado;
        consulta = Controlador.Conexion.con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
        resultado = consulta.executeQuery("SELECT Cupo, Identificacion, Saldo FROM Cuenta WHERE NoCuenta = '" + NoCuenta + "'");
        
        if (resultado.first()) {
            Saldo = resultado.getString("Saldo");
            Cupo = resultado.getString("Cupo");
            Ide = resultado.getString("Identificacion");
            System.out.println(Saldo);
            JtCup.setText(Cupo);
            JtIden.setText(Ide);
            JtSaldoDis.setText(Saldo);
            JtSaldoDis2.setText(Saldo);
            System.out.println(Cupo);
            return Saldo;
                   
        } else {
            return null;
        }
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
        Logger.getLogger(Funciones.class.getName()).log(Level.SEVERE, null, ex);
    } finally {

    }

    return null;
    }
     
    public void setJtCup(JLabel JtCup) {
        this.JtCup = JtCup;
    }

    public static void llenarCBCuentas(String N) throws ClassNotFoundException, InstantiationException, IllegalAccessException {
        N = JtIde.getText().trim();
        try {
            if (!Conexion.abrirConexion()) {
                JOptionPane.showMessageDialog(null, "Error en conexión a base de datos");
            } else {
                CbCuenta.removeAllItems();
                ArrayList mListaCuentas = Conexion.getListaCuentas(N);
                Iterator iterador = mListaCuentas.iterator();
                while (iterador.hasNext()) {
                    Cuentas mCuenta = (Cuentas) iterador.next();
                    CbCuenta.addItem(String.valueOf(mCuenta));

                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void llenarCBProd() throws ClassNotFoundException, InstantiationException, IllegalAccessException {
        try {
            if (!Conexion.abrirConexion()) {
                JOptionPane.showMessageDialog(null, "Error en conexión a base de datos");
            } else {
                CbProd.removeAllItems();
                mListaProductos = Conexion.getListaProductos();
                Iterator iterador = mListaProductos.iterator();
                while (iterador.hasNext()) {
                  producto mProducto = (producto) iterador.next();
              String itemText = mProducto.getIdProd() + " - " + mProducto.getNombre() + ", Stock: " + mProducto.getStock() + " - Precio - " + mProducto.getPrecio();
                CbProd.addItem(itemText);

                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void BtIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtIngresarActionPerformed
        Admin ad = new Admin();
        ComboPedidos();
         if(JpContra.getPassword().length==0 || JtIde.getText().length()==0){
                JOptionPane.showMessageDialog(rootPane, "El campo identificacion o contraseña esta vacío.","Advertencia",JOptionPane.WARNING_MESSAGE);
        }else{
        try {

            String Pass = String.valueOf(JpContra.getPassword());
            if (JtIde.getText().equals("11")) {
                if (!Funciones.VeriAdmin(JtIde.getText(), Pass)) {
                } else {
                    ad.setVisible(true);
                    setVisible(false);                
                }
            }
            if (Funciones.VeriUser(JtIde.getText().trim(), Pass.trim())) {
                try {
                    llenarCBCuentas(JtIde.getText());
                } catch (ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
                    Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
                }
                jTabbedPane.remove(JPReg);
                  jTabbedPane.addTab("LogOut",JPdes);
                jTabbedPane.setEnabledAt(0, true);
                jTabbedPane.setEnabledAt(1, true);
                jTabbedPane.setEnabledAt(2, true);
                jTabbedPane.setEnabledAt(3, true);
                JtIden.setText(JtIde.getText());
            }
        } catch (SQLException ex) {
            Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "El usuario o contraseña es incorrecto o no existe");
        }
         }
    }//GEN-LAST:event_BtIngresarActionPerformed

    private void JpContraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JpContraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JpContraActionPerformed

    private void JpContra1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JpContra1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JpContra1ActionPerformed

    private void CbCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbCuentaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CbCuentaActionPerformed

    private void JbAñadirSalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JbAñadirSalActionPerformed
try {
    Controlador.Conexion.abrirConexion();
    String ide;
    int saldo, cupo;
    
    Statement consulta;
    ResultSet resultado;
    
    consulta = Controlador.Conexion.con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
    resultado = consulta.executeQuery("SELECT Cupo, NoCuenta, Saldo FROM Cuenta WHERE NoCuenta = '" + JtNoCuenta2.getText() + "'");
    
    if (resultado.next()) {
        int añadir = Integer.parseInt(JtAñadir.getText());
        saldo = resultado.getInt("Saldo");
        cupo = resultado.getInt("Cupo");
        ide = resultado.getString("NoCuenta");
        
        if (saldo + añadir > cupo) {
            JOptionPane.showMessageDialog(null, "El saldo que desea agregar supera su cupo actual.");
        } else {
            int nuevoSaldo = saldo + añadir;
            

            String updateQuery = "UPDATE Cuenta SET Saldo = ? WHERE NoCuenta = ?";
          PreparedStatement  statement =  Controlador.Conexion.con.prepareStatement(updateQuery);
            statement.setInt(1, nuevoSaldo);
            statement.setString(2, ide);
            statement.executeUpdate();
            ConsultarCuenta(ide);

        }
    } else {
        JOptionPane.showMessageDialog(null, "No se encontró la cuenta especificada.");
    }
} catch (ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
    Logger.getLogger(Funciones.class.getName()).log(Level.SEVERE, null, ex);
} catch (SQLException ex) {
    Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
} finally {
}

    }//GEN-LAST:event_JbAñadirSalActionPerformed

    private void BtConsultarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtConsultarPedidoActionPerformed
       JlPruebas.setForeground(Color.white);
       JlPruebas.setBackground(Color.black);
       JlPruebas.setOpaque(true);
       int Id = Integer.parseInt(String.valueOf(JComboPed.getSelectedItem()));
       JlPruebas.setText(ObtenerEstado(Id, Id));
       JTAProdPed.setText(ObtenerDetalles(Id, Id));
       
    }//GEN-LAST:event_BtConsultarPedidoActionPerformed

    public String ObtenerEstado(int idPedido, int idDetal) {
    String estado = "";

    try {
        // Realizar la consulta y obtener el resultado
        
        String sql = "SELECT pd.estado " +
                     "FROM pedido2 pd " +
                     "JOIN detalles d ON pd.idPedido = d.IdPedido " +
                     "WHERE d.IdPedido = ? AND d.IdDetal = ? " +
                     "LIMIT 1";
        
        try (PreparedStatement statement = Conexion.con.prepareStatement(sql,ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY)) {
            statement.setInt(1, idPedido);
            statement.setInt(2, idDetal);
            ResultSet resultSet = statement.executeQuery();
            
            // Obtener el estado si hay un resultado
            
            if (resultSet.next()) {
                estado = resultSet.getString("estado");
            }
            
            // Cerrar el ResultSet
            
            resultSet.close();
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }
    
    // Retornar el estado
    return estado;
}
    
   public String ObtenerDetalles(int idPedido, int idDetal) {
    StringBuilder datos = new StringBuilder();

    try {
        // Realizar la consulta y obtener los resultados
        Conexion.abrirConexion();
        String sql = "SELECT p.nombre, d.Cantidad " +
                     "FROM productos p " +
                     "JOIN detalles d ON p.idProducto = d.IdProducto " +
                     "JOIN pedido2 pd ON pd.idPedido = d.IdPedido " +
                     "WHERE d.IdPedido = ? AND d.IdDetal = ? " +
                     "GROUP BY p.idProducto";
        
        try (PreparedStatement statement = Conexion.con.prepareStatement(sql)) {
            statement.setInt(1, idPedido);
            statement.setInt(2, idDetal);
            ResultSet resultSet = statement.executeQuery();
            
            // Iterar sobre los resultados y construir la cadena
            while (resultSet.next()) {
                String nombre = resultSet.getString("nombre");
                int cantidad = resultSet.getInt("Cantidad");
                
                datos.append("Nombre: ").append(nombre)
                    .append(", Cantidad: ").append(cantidad)
                    .append("\n");
            }
            
            // Cerrar el ResultSet
            resultSet.close();
        } catch (SQLException e) {
        }
    } catch (Exception ex) {
    }
    
    return datos.toString();
}
    private void JtNoCuenta3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JtNoCuenta3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JtNoCuenta3ActionPerformed

    private void JComboPedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JComboPedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JComboPedActionPerformed

    private void JbBorrarProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JbBorrarProdActionPerformed
       int Row = JTableProductos.getSelectedRow();
       BtAgregar.setEnabled(true);
       if(Row !=1){
           
           Object valor = modelo.getValueAt(Row, 1);
           int val = Integer.parseInt((String) valor);
           otrocont -= val;
           contador--;
           System.out.println(val);
           modelo.removeRow(Row);
           
       }
    }//GEN-LAST:event_JbBorrarProdActionPerformed

    private void JbLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JbLogOutActionPerformed
       jTabbedPane.addTab("Login", JPReg);
        jTabbedPane.remove(3);
                jTabbedPane.setEnabledAt(0, false);
                jTabbedPane.setEnabledAt(1, false);
                jTabbedPane.setEnabledAt(2, false);
                JtIde.setText("");
                JpContra.setText("");
                JtSaldoDis.setText("");
                JtSaldoDis2.setText("");
                JtNoCuenta2.setText("");
                JtCup.setText("");
                JTAProdPed.setText("");
                BtAgregar.setEnabled(true);
                modelo.setRowCount(0);
    }//GEN-LAST:event_JbLogOutActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            AgregarCuenta();
            llenarCBCuentas(JtIden.getText());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed
  public static void AgregarCuenta() {
    try {
        // Establecer la conexión a la base de datos
        Controlador.Conexion.abrirConexion();

        // Verificar si ya existe una cuenta con el número de cuenta ingresado
        String selectQuery = "SELECT NoCuenta FROM cuenta WHERE NoCuenta = ?";
        PreparedStatement selectStatement = con.prepareStatement(selectQuery);
        selectStatement.setLong(1, Long.parseLong(JtNoCuenta3.getText()));
        ResultSet resultSet = selectStatement.executeQuery();

        if (resultSet.next()) {
            // Si ya existe una cuenta con el número de cuenta ingresado, mostrar advertencia
            JOptionPane.showMessageDialog(null, "Ya existe una cuenta con el número de cuenta ingresado.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        } else {
            // Preparar la consulta SQL para insertar los datos en la tabla
            String insertQuery = "INSERT INTO cuenta (NoCuenta, Saldo, numero_tarjeta, Identificacion, Cupo, Contraseña) VALUES (?, ?, ?, ?, ?, ?)";
            PreparedStatement statement = con.prepareStatement(insertQuery);
            long noCuenta = Long.parseLong(JtNoCuenta3.getText());
            String numeroTarjeta = JtNoTar.getText();
            int identificacion = Integer.parseInt(JtIden.getText());
            int cupo = Integer.parseInt(JtCupo.getText());
            int contraseña = Integer.parseInt(JtContra3.getText());

            // Establecer los valores de los parámetros en la consulta preparada
            statement.setLong(1, noCuenta);
            statement.setInt(2, 0);
            statement.setString(3, numeroTarjeta);
            statement.setInt(4, identificacion);
            statement.setInt(5, cupo);
            statement.setInt(6, contraseña);

            // Ejecutar la consulta
            statement.executeUpdate();
            JOptionPane.showMessageDialog(null, "Datos agregados correctamente.");
            System.out.println("Datos agregados correctamente.");
        }

    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
        Logger.getLogger(Funciones.class.getName()).log(Level.SEVERE, null, ex);
    } catch (SQLException e) {
        System.out.println("Error al agregar datos: " + e.getMessage());
    } finally {
        // No cierres la conexión aquí, ya que aún puedes necesitar ejecutar más consultas
    }
}    public int contador = 0;

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    try {
                        new Inicio().setVisible(true);
                    } catch (InstantiationException | IllegalAccessException | SQLException ex) {
                        Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton BtAgregar;
    private javax.swing.JButton BtConsultar;
    private javax.swing.JButton BtConsultarPedido;
    private javax.swing.JButton BtIngresar;
    private javax.swing.JButton BtRegistrar;
    public static javax.swing.JComboBox<String> CbCuenta;
    public javax.swing.JComboBox<String> CbProd;
    private javax.swing.JToggleButton JBLogReg;
    private javax.swing.JComboBox<String> JComboPed;
    private javax.swing.JPanel JPLog;
    private javax.swing.JPanel JPReg;
    private javax.swing.JPanel JPRegg;
    private javax.swing.JPanel JPdes;
    private javax.swing.JTextArea JTAProdPed;
    private javax.swing.JTable JTableProductos;
    private javax.swing.JButton JbAñadirSal;
    private javax.swing.JButton JbBorrarProd;
    private javax.swing.JButton JbLogOut;
    private javax.swing.JLabel JlPruebas;
    private javax.swing.JPasswordField JpContra;
    private javax.swing.JPasswordField JpContra1;
    private javax.swing.JPanel JpPedido;
    private javax.swing.JTextField JtAñadir;
    private static javax.swing.JTextField JtContra3;
    public javax.swing.JLabel JtCup;
    private static javax.swing.JTextField JtCupo;
    private javax.swing.JTextField JtDireccion;
    private javax.swing.JTextField JtEmail;
    public static javax.swing.JTextField JtIde;
    public static javax.swing.JLabel JtIden;
    private javax.swing.JTextField JtIdentificacion;
    public javax.swing.JLabel JtNoCuenta2;
    private static javax.swing.JTextField JtNoCuenta3;
    private static javax.swing.JTextField JtNoTar;
    private javax.swing.JTextField JtNombre;
    private javax.swing.JButton JtPagar;
    public javax.swing.JLabel JtSaldoDis;
    public javax.swing.JLabel JtSaldoDis2;
    private javax.swing.JTextField JtTelefono;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    public javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    public javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JTabbedPane jTabbedPane;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField6;
    // End of variables declaration//GEN-END:variables
}
